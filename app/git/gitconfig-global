# """
# Global git configuration
# Updated 2020-02-14.
#
# Retab spaces in vim:
# https://stackoverflow.com/questions/9104706
# > :set tabstop=4
# > :set noexpandtab
# > :%retab!
#
# See also:
# - https://github.com/roryk/dotfiles/blob/master/gitconfig
# - https://github.com/vsbuffalo/dotfiles/blob/master/.gitconfig
# """



# Basic  {{{1
# ==============================================================================

[core]
	editor = vim
	excludesfile = ~/.gitignore
[color]
	ui = true
[status]
	# > submoduleSummary = true



# Credential caching  {{{1
# ==============================================================================

# Particularly useful for commits over HTTPS, on machines where we don't have
# SSH keys configured for GitHub.
# 
# > git config --global credential.helper "cache --timeout=10000000"
#
# See also:
# - https://git-scm.com/docs/git-credential-store
# - https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage
# - https://happygitwithr.com/credential-caching.html
# - https://stackoverflow.com/a/5343146/3911732

[credential]
	helper = cache --timeout=10000000



# File transfers  {{{1
# ==============================================================================
#
# oh-my-zsh repo can fail to clone unless these are set.
# > git config --global fetch.fsck.zeroPaddedFilemode warn
# > git config --global receive.fsck.zeroPaddedFilemode warn
# > git config --global transfer.fsck.zeroPaddedFilemode warn
# > git config --global fsck.zeroPaddedFilemode warn

[push]
	default = simple
[fetch]
	fsckobjects = true
	zeroPaddedFilemode = ignore
[receive]
	fsckobjects = true
[transfer]
	fsckobjects = true

[fsck]
	zeroPaddedFilemode = warn
[fetch "fsck"]
	zeroPaddedFilemode = warn
[receive "fsck"]
	zeroPaddedFilemode = warn
[transfer "fsck"]
	zeroPaddedFilemode = warn



# Large file storage (LFS)  {{{1
# ==============================================================================

[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process



# Differences  {{{1
# ==============================================================================

# This is useful for Jupyter Notebooks.
[diff "nb2md"]
	textconv = nb2md



# Aliases  {{{1
# ==============================================================================

[alias]
	aa = add --all
	br = branch
	# Using 'i' for interactive here.
	ci = commit
	# Don't mask 'clean'.
	cleanup = !git remote prune origin \
		&& git gc \
		&& git clean -dfx \
		&& git stash clear
	cm = commit -m
	co = checkout
	glog = log --graph
	grog = log --graph --abbrev-commit --decorate --all
	last = log -1 HEAD
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	pr = !sh -c 'git fetch origin pull/$1/head:pr$1' -
	shorty = status --short --branch
	st = status -sb
	trash = checkout --
	unstage = reset HEAD --
	up = !sh -c 'git pull --rebase --prune && git log --pretty HEAD@{1}..'
	who = shortlog -n -s --no-merges
