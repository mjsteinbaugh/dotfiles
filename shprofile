#!/bin/sh

# What goes in here:
# Settings that inherit/persist in sub-shells.
# - umask
# - Exports, including PATH

# NOTE: The OS variables are exported by koopa.

# Enable for debugging:
# echo "SHPROFILE"
# export SHPROFILE=1

# Load shared shell configuration.
# shellcheck source=/dev/null
. ~/.shrc

# umask
# 077 is more secure, but 022 is more useful.
# umask 022

# Export OS variables.
[ "$(uname -s)" = "Darwin" ] && export MACOS=1 && export UNIX=1
[ "$(uname -s)" = "Linux" ] && export LINUX=1 && export UNIX=1

# Accessible as $HOSTNAME in bash.
if quiet_expr "$(uname -n)" "azlabapp"
then
    export AZURE=1
fi

# Set up text editor.
# Using vi mode instead of emacs by default.
if quiet_which vim
then
    export EDITOR="vim"
elif quiet_which vi
then
    export EDITOR="vi"
fi

# Save more history.
export HISTSIZE="100000"
export SAVEHIST="100000"

# Enable colorful manpages.
# export LESS_TERMCAP_mb=$'\E[01;31m'
# export LESS_TERMCAP_md=$'\E[01;31m'
# export LESS_TERMCAP_me=$'\E[0m'
# export LESS_TERMCAP_se=$'\E[0m'
# export LESS_TERMCAP_so=$'\E[01;44;33m'
# export LESS_TERMCAP_ue=$'\E[0m'
# export LESS_TERMCAP_us=$'\E[01;32m'

# Set to avoid `env` output from changing console color.
# export LESS_TERMEND=$'\E[0m'

# Trim the number of directories in prompt (PS1).
# Supported in bash 4.
# Note that macOS is stuck on bash 3 due to GPL license.
export PROMPT_DIRTRIM=3

# Ruby gems.
if [ -d "${HOME}/.gem" ]
then
    export GEM_HOME="${HOME}/.gem"
fi

# GnuPGP. Enable passphrase prompting in terminal.
GPG_TTY=$(tty)
export GPG_TTY

# Add the date/time to `history` command output.
# Note that on macOS bash will fail if `set -e` is set and this isn't exported.
export HISTTIMEFORMAT="%Y%m%d %T  "

# rsync
# -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)
# -z, --compress              compress file data during the transfer
# -L, --copy-links            transform symlink into referent file/dir
#     --delete-before         receiver deletes before xfer, not during
# -h, --human-readable        output numbers in a human-readable format
#     --iconv=CONVERT_SPEC    request charset conversion of filenames
#     --progress              show progress during transfer
#     --dry-run
#     --one-file-system
#     --acls --xattrs
#     --iconv=utf-8,utf-8-mac
export RSYNC_FLAGS="--archive --copy-links --delete-before --human-readable --progress"

if [ -n "$MACOS" ]
then
    # Include sbin in PATH.
    add_to_path_start "/usr/local/sbin"

    export GREP_OPTIONS="--color=auto"
    export CLICOLOR=1
    # `man ls`: see LSCOLORS section for color designators.
    # export LSCOLORS="Gxfxcxdxbxegedabagacad"

    # rsync flags for APFS.
    export RSYNC_FLAGS_APFS="${RSYNC_FLAGS} --iconv=utf-8,utf-8-mac"

    # Homebrew
    if quiet_which brew
    then
        HOMEBREW_PREFIX="$(brew --prefix)"
        export HOMEBREW_PREFIX
        HOMEBREW_REPOSITORY="$(brew --repo)"
        export HOMEBREW_REPOSITORY
        # export HOMEBREW_INSTALL_CLEANUP=1
    fi

    # Enable more colors with grc.
    # shellcheck disable=SC1090
    [ -f "$HOMEBREW_PREFIX/etc/grc.bashrc" ] && . "$HOMEBREW_PREFIX/etc/grc.bashrc"

    # Python
    # Using Conda Python instead of Homebrew version (see koopa).
    # https://docs.brew.sh/Homebrew-and-Python
    # brew info python
    # python -V
    # export PATH="/usr/local/opt/python/libexec/bin:${PATH}"

    # Ruby (rbenv)
    # https://github.com/rbenv/rbenv
    # export PATH="~/.rbenv/shims:${PATH}"
    # eval "$(rbenv init -)"
    quiet_which rbenv && add_to_path_start "$(rbenv root)/shims"

    # Perl (perlbrew)
    # https://perlbrew.pl
    # if [ -f "${HOME}/perl5/perlbrew/etc/bashrc" ]; then
    #     . "${HOME}/perl5/perlbrew/etc/bashrc"
    # fi

    # Ensembl Perl API
    # ensembl="${HOME}/GitHub/ensembl/75"
    # if [ -d "$ensembl" ]; then
    #     export PATH="${ensembl}/ensembl-git-tools/bin:${PATH}"
    #
    #     # perlbrew switch perl-5.14.4
    #     PERL5LIB="${PERL5LIB}:${ensembl}/bioperl-1.6.1"
    #     PERL5LIB="${PERL5LIB}:${ensembl}/ensembl/modules"
    #     PERL5LIB="${PERL5LIB}:${ensembl}/ensembl-compara/modules"
    #     PERL5LIB="${PERL5LIB}:${ensembl}/ensembl-variation/modules"
    #     PERL5LIB="${PERL5LIB}:${ensembl}/ensembl-funcgen/modules"
    #     export PERL5LIB
    # fi
    # unset -v ensembl

    # Google Cloud SDK
    # Install using Homebrew Cask:
    # brew cask install google-cloud-sdk
    # dir="${HOMEBREW_PREFIX}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk"
    # if [ -d $dir ]; then
    #     . "${dir}/path.bash.inc"
    #     . "${dir}/completion.bash.inc"
    # fi
    # unset -v dir
fi
