#!/usr/bin/env bash
set -Eeu -o pipefail

add_to_path_start() { # {{{1
    # """
    # Add to start of 'PATH'.
    # @note Updated 2021-06-14.
    # """
    local prefix
    [[ "$#" -gt 0 ]] || return 1
    PATH="${PATH:-}"
    for prefix in "$@"
    do
        PATH="${prefix}:${PATH}"
    done
    export PATH
    return 0
}

is_installed() { # {{{1
    # """
    # Are all of the requested programs installed?
    # @note Updated 2021-06-14.
    # """
    local cmd
    for cmd in "$@"
    do
        command -v "$cmd" >/dev/null || return 1
    done
    return 0
}

link() {
    koopa::link_dotfile --force "$@"
}

install() {
    # """
    # Install dotfiles.
    # @note Updated 2021-06-14.
    # """
    local koopa koopa_prefix name name_fancy prefix
    koopa='koopa'
    name='dotfiles'
    name_fancy='dotfiles'
    prefix="$( \
        cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && \
        pwd -P \
    )"
    if ! is_installed "$koopa"
    then
        # By default, expected to be installed at 'app/dotfiles/rolling'
        # inside of koopa.
        koopa_prefix="$( \
            cd "$(dirname "$prefix")/../.." >/dev/null 2>&1 && \
            pwd -P \
        )"
        koopa="${koopa_prefix}/bin/koopa"
        if [[ ! -x "$koopa" ]]
        then
            printf "Failed to locate '%s'.\n" "$koopa" >&2
            return 1
        fi
    fi
    export KOOPA_CHECKS=0
    # shellcheck source=/dev/null
    source "$("$koopa" header bash)"
    koopa::install_start "$name_fancy" "$prefix"
    koopa::add_koopa_config_link "$prefix" "$name"
    koopa::rm \
        "${HOME}/.R/Makevars" \
        "${HOME}/.config/doom" \
        "${HOME}/.config/libreoffice" \
        "${HOME}/.kshrc" \
        "${HOME}/.oh-my-zsh" \
        "${HOME}/.shrc" \
        "${HOME}/.tmux" \
        "${HOME}/.zprofile"
    link --config 'app/bpytop'
    link --config 'app/broot'
    link --config 'app/hadolint/hadolint.yaml' 'hadolint.yaml'
    link --config 'app/htop'
    link --config 'app/kakoune' 'kak'
    link --config 'app/neofetch'
    link --config 'app/nvim'
    link --config 'app/pip'
    link --config 'app/ranger'
    link --config 'app/rstudio'
    link --config 'app/starship/starship.toml' 'starship.toml'
    link --config 'shell/fish'
    link --config 'shell/oil'
    link --opt 'chemacs' 'emacs.d'
    link 'app/ack/ackrc'
    link 'app/chemacs/emacs-profiles.el'
    link 'app/curl/curlrc'
    link 'app/doom' 'doom.d'
    link 'app/editorconfig/editorconfig'
    link 'app/git/gitignore'
    link 'app/gnupg/dirmngr.conf' 'gnupg/dirmngr.conf'
    link 'app/npm/npmrc'
    link 'app/pylint/pylintrc'
    link 'app/python/pyrc'
    link 'app/screen/screenrc'
    link 'app/spacemacs/spacemacs.el' 'spacemacs'
    link 'app/spacevim' 'SpaceVim.d'
    link 'app/terminfo/terminfo.d' 'terminfo'
    link 'app/tmux/tmux.conf'
    link 'app/vim/vim.d' 'vim'
    link 'app/vim/vimrc'
    link 'app/wget/wgetrc'
    link 'shell/bash/bash_logout'
    link 'shell/bash/bash_profile'
    link 'shell/bash/bashrc'
    link 'shell/bash/inputrc'
    link 'shell/posix/aliases'
    link 'shell/posix/profile'
    link 'shell/zsh/zlogout'
    link 'shell/zsh/zshrc'
    if koopa::is_macos
    then
        link --config 'app/alacritty'
        link 'app/vim/gvimrc'
        link 'os/macos/app/gnupg/gpg-agent.conf' 'gnupg/gpg-agent.conf'
    elif koopa::is_linux
    then
        link 'app/gnupg/gpg-agent.conf' 'gnupg/gpg-agent.conf'
        if koopa::is_ubuntu
        then
            link 'os/linux/distro/ubuntu/hushlogin'
        fi
    fi
    if [[ -d "${HOME}/.gnupg" ]]
    then
        koopa::chmod 0700 "${HOME}/.gnupg"
    fi
    if [[ -d "${HOME}/.ssh" ]]
    then
        koopa::chmod 0700 "${HOME}/.ssh"
    fi
    koopa::install_success "$name_fancy" "$prefix"
    return 0
}

install "$@"
