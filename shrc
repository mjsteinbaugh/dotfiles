#!/bin/sh
# shellcheck disable=SC2155

export SHRC=1


# Functions ====================================================================
quiet_which() {
    which "$1" &>/dev/null
}

remove_from_path() {
    [ -d "$1" ] || return
    # Doesn't work for first item in the PATH.
    export PATH=${PATH//:$1/}
}

add_to_path_start() {
    [ -d "$1" ] || return
    remove_from_path "$1"
    export PATH="$1:$PATH"
}

add_to_path_end() {
    [ -d "$1" ] || return
    remove_from_path "$1"
    export PATH="$PATH:$1"
}

force_add_to_path_start() {
    remove_from_path "$1"
    export PATH="$1:$PATH"
}


# Aliases ======================================================================
# alias be="noglob bundle exec"
# alias gist="gist --open --copy"
# alias ls="ls -Fhlo --color"
# alias make="nice make"
# alias rake="noglob rake"
# alias rg="rg --colors 'match:style:nobold' --colors 'path:style:nobold'"
# alias rsync="rsync --partial --progress --human-readable --compress"
# alias svn="svn-git.sh"
# alias zmv="noglob zmv -vW"

# Enable colors (for dircolors).
# alias dir="dir --color=auto"
# alias egrep="egrep --color=auto"
# alias fgrep="fgrep --color=auto"
# alias grep="grep --color=auto"
# alias ls="ls --color=auto"
# alias vdir="vdir --color=auto"

# How to copy to Azure shares without error.
# Note that timestamps and permissions are not maintained.
# -R, --recursive
# -L, --dereference
# -u, --update
# -v, --verbose
# cp -RLuv data seq01

# Quick exit.
alias e="exit"

# Improve common file system command defaults.
alias cp="cp -iruv"
alias mkdir="mkdir -vp"
alias mv="mv -iv"
alias rm="rm -iv"

# Listing files.
alias la="ls -a"
alias lF="ls -F"
alias ll="ls -AFGlh"

# Set more sensible defaults for size commands.
alias df="df -H"
alias du="du -sh"

# Improve less defaults.
alias less="less --ignore-case --raw-control-chars"

# Easier checksum calculation.
alias sha256="shasum -a 256"

# Emacs. Use terminal mode by default instead of window system.
alias emacs="emacs --no-window-system"

# Disable R prompt to save workspace.
# --no-environ
# --no-init
# --no-restore
# --no-save
# --vanilla
alias R="R --no-restore --no-save"


# Preferences (exports) ========================================================
# Set up text editor.
# Use vi mode instead of emacs by default.
# Alternatively, can use "emacs" here (e.g. for spacemacs).
set -o vi
if quiet_which vim; then
    export EDITOR="vim"
elif quiet_which vi; then
    export EDITOR="vi"
fi

# Enable colorful manpages.
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# Set to avoid `env` output from changing console color.
export LESS_TERMEND=$'\E[0m'

# Trim the number of directories in prompt (PS1).
# Supported in bash 4.
# Note that macOS is stuck on bash 3 due to GPL license.
export PROMPT_DIRTRIM=3

# Ruby gems.
if [[ -d "${HOME}/.gem" ]]; then
    export GEM_HOME="${HOME}/.gem"
fi

# GnuPGP. Enable passphrase prompting in terminal.
export GPG_TTY=$(tty)

# Add the date/time to `history` command output.
# Note that on macOS bash will fail if `set -e` is set and this isn't exported.
export HISTTIMEFORMAT="%Y%m%d %T  "

# rsync
# -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)
# -z, --compress              compress file data during the transfer
# -L, --copy-links            transform symlink into referent file/dir
#     --delete-before         receiver deletes before xfer, not during
# -h, --human-readable        output numbers in a human-readable format
#     --iconv=CONVERT_SPEC    request charset conversion of filenames
#     --progress              show progress during transfer
#     --dry-run
#     --one-file-system
#     --acls --xattrs
#     --iconv=utf-8,utf-8-mac
export RSYNC_FLAGS="--archive --copy-links --delete-before --human-readable --progress"


# Conditional configuration ====================================================
# Run dircolors, if it exists.
quiet_which dircolors && eval "$(dircolors -b)"

# Fake realpath support, if necessary.
if [ -z $(quiet_which realpath) ]; then
    alias realpath="readlink -f"
fi


# Platform-specific ============================================================
if [ "$MACOS" ]; then
    export GREP_OPTIONS="--color=auto"
    export CLICOLOR=1
    # `man ls`: see LSCOLORS section for color designators.
    # export LSCOLORS="Gxfxcxdxbxegedabagacad"
    
    # rsync improvements for APFS.
    export RSYNC_FLAGS_APFS="${RSYNC_FLAGS} --iconv=utf-8,utf-8-mac"
    
    # Include sbin in PATH.
    add_to_path_start "/usr/local/sbin"
    
    # Homebrew
    if quiet_which brew
    then
        export HOMEBREW_PREFIX="$(brew --prefix)"
        export HOMEBREW_REPOSITORY="$(brew --repo)"
        # export HOMEBREW_INSTALL_CLEANUP=1
    fi
    
    # Homebrew now supports a global variable to force bottle installations.
    # https://github.com/Homebrew/brew/pull/4520/files
    # https://github.com/Homebrew/brew/pull/4542/files
    export HOMEBREW_FORCE_BOTTLE="1"
    
    # Use exa instead of ls, if installed.
    # It has better color support.
    # https://the.exa.website/
    if quiet_which exa
    then
        alias ls="exa -Fg"
    else
        alias ls="ls -F"
    fi
    
    # Enable more colors with grc.
    # shellcheck disable=SC1090
    [ -f "$HOMEBREW_PREFIX/etc/grc.bashrc" ] && source "$HOMEBREW_PREFIX/etc/grc.bashrc"
    
    # Python
    # Using Conda Python instead of Homebrew version (see koopa).
    # https://docs.brew.sh/Homebrew-and-Python
    # brew info python
    # python -V
    # export PATH="/usr/local/opt/python/libexec/bin:${PATH}"
    
    # Ruby (rbenv)
    # https://github.com/rbenv/rbenv
    # export PATH="~/.rbenv/shims:${PATH}"
    # eval "$(rbenv init -)"
    quiet_which rbenv && add_to_path_start "$(rbenv root)/shims"
    
    # Perl (perlbrew)
    # https://perlbrew.pl
    # if [ -f "${HOME}/perl5/perlbrew/etc/bashrc" ]; then
    #     . "${HOME}/perl5/perlbrew/etc/bashrc"
    # fi
    #
    # # Ensembl Perl API
    # ensembl="${HOME}/GitHub/ensembl/75"
    # if [ -d "$ensembl" ]; then
    #     export PATH="${ensembl}/ensembl-git-tools/bin:${PATH}"
    #    
    #     # perlbrew switch perl-5.14.4
    #     PERL5LIB="${PERL5LIB}:${ensembl}/bioperl-1.6.1"
    #     PERL5LIB="${PERL5LIB}:${ensembl}/ensembl/modules"
    #     PERL5LIB="${PERL5LIB}:${ensembl}/ensembl-compara/modules"
    #     PERL5LIB="${PERL5LIB}:${ensembl}/ensembl-variation/modules"
    #     PERL5LIB="${PERL5LIB}:${ensembl}/ensembl-funcgen/modules"
    #     export PERL5LIB
    # fi
    # unset -v ensembl
    
    # Google Cloud SDK
    # Install using Homebrew Cask:
    # brew cask install google-cloud-sdk

    # dir="${HOMEBREW_PREFIX}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk"
    # if [ -d $dir ]; then
    #     . "${dir}/path.bash.inc"
    #     . "${dir}/completion.bash.inc"
    # fi
    # unset -v dir

    # Call personal scripts prefixed with "mjs".
    # Currently this is macOS-specific.
    function mjs {
        local script="$1"
        shift 1
        . "${HOME}/git/bash/${script}.sh" $*
    }
    
    # Create the TODAY directory in bucket automatically.
    mjs bucket
    
    # Aliases
    alias autofs="sudo automount -vc"
    alias finder-hide="setfile -a V"
    alias icloud-status="brctl log --wait --shorten"
    alias locate="mdfind -name"
    alias rstudio="open -a rstudio"
fi
